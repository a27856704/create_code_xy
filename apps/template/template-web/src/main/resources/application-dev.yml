server:
  port: 8091
spring:


  datasource:
    url:  jdbc:mysql://127.0.0.1/test_template?useSSL=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
    username: root
    password: 123456
    #    url:  jdbc:mysql://127.0.0.1:3306/sb_db?useSSL=false&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
    #    username: root
    #    password: nbrc@123
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 30
    minIdle: 10
    maxActive: 100
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true


  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML5
    encoding: utf-8
    cache: false
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss




  servlet:
    multipart:
      max-file-size: 1000MB
      max-request-size: 10000MB

mybatis:
  type-aliases-package: vip.sunke.template.model,vip.sunke.template.modelExt,vip.sunke.template.search
  mapper-locations: classpath*:mapper/*.xml
logging:
  level:
    root: INFO
    vip.sunke.template: DEBUG
    com.apache.ibatis: DEBUG
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file: ./apps/template/template-web/api.log
  file.max-size: 20MB


sk:
  dozer.path: classpath*:dozer/**/*.xml
file:
  upload:
    root:  /upload/seal
    tempRoot: /upload/temp
    website:  http://localhost:${server.port}/files

debug: true















